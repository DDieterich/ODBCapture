diff -drywtNW 172 --suppress-common-lines ../../../grbsrc/SYS/ODBCAPTURE.user grbsrc/SYS/ODBCAPTURE.user
-- Real Application Security System Grants                                           <
                                                                                     <
                                                                                     <
prompt XS Admin Grant "ADMIN_ANY_SEC_POLICY" to "ODBCAPTURE"                         <
begin                                                                                <
   execute immediate 'begin' ||                                                      <
                     '  xs_admin_util.grant_system_privilege(''ADMIN_ANY_SEC_POLICY' <
                     'end;';                                                         <
exception when others then                                                           <
   if    SQLERRM not like '%PLS-00201: identifier ''XS_ADMIN_UTIL.GRANT_SYSTEM_PRIVI <
     AND SQLERRM not like '%ORA-01031: insufficient privileges%'                     <
   then                                                                              <
      raise;                                                                         <
   end if;                                                                           <
end;                                                                                 <
/                                                                                    <
                                                                                     <
prompt XS Admin Cloud Grant "ADMIN_ANY_SEC_POLICY" to "ODBCAPTURE"                   <
begin                                                                                <
   execute immediate 'begin' ||                                                      <
                     '  xs_admin_cloud_util.grant_system_privilege(''ADMIN_ANY_SEC_P <
                     'end;';                                                         <
exception when others then                                                           <
   if SQLERRM not like '%PLS-00201: identifier ''XS_ADMIN_CLOUD_UTIL.GRANT_SYSTEM_PR <
   then                                                                              <
      raise;                                                                         <
   end if;                                                                           <
end;                                                                                 <
/                                                                                    <
                                                                                     <
                                                                                     <
diff -drywtNW 172 --suppress-common-lines ../../../grbtst/odbcapture_installation_logs.csv grbtst/odbcapture_installation_logs.csv
"grbtst","RAS_Admin_ODBCTEST.racl.log"                                               <
diff -drywtNW 172 --suppress-common-lines ../../../grbtst/RAS_Admin_ODBCTEST.racl grbtst/RAS_Admin_ODBCTEST.racl
                                                                                     <
--                                                                                   <
-- Create RAS ACLs for RAS Administrator ODBCTEST                                    <
--  NOTE: This is a "GRANTEE" RAS ACL                                                <
--                                                                                   <
-- To disable RAS ACLs for data loading/unloading, use:                              <
--begin                                                                              <
--   xs_data_security.disable_object_policy                                          <
--      (policy  => '"ODBCTEST"."GRB_TEST_POLICY_01"'                                <
--      ,schema  => 'ODBCAPTURE'                                                     <
--      ,object  => 'GRBTST_$NAME'                                                   <
--      );                                                                           <
--end;                                                                               <
--/                                                                                  <
--                                                                                   <
                                                                                     <
set define off                                                                       <
                                                                                     <
                                                                                     <
-- RAS Defined Roles                                                                 <
                                                                                     <
prompt GRB_TEST_ROLE_01.XS_ROLE                                                      <
--DBMS_METADATA:GRB_TEST_ROLE_01.XS_ROLE                                             <
                                                                                     <
                                                                                     <
BEGIN                                                                                <
 xs_principal.create_role(                                                           <
     name=>'"GRB_TEST_ROLE_01"',                                                     <
     enabled=>TRUE);                                                                 <
END;                                                                                 <
/                                                                                    <
                                                                                     <
                                                                                     <
-- RAS Defined Users                                                                 <
                                                                                     <
prompt GRB_TEST_USER_01.XS_USER                                                      <
--DBMS_METADATA:GRB_TEST_USER_01.XS_USER                                             <
                                                                                     <
                                                                                     <
BEGIN                                                                                <
 xs_principal.create_user(                                                           <
     name=>'"GRB_TEST_USER_01"',                                                     <
     schema=>'"ODBCAPTURE"',                                                         <
     status=>XS_PRINCIPAL.ACTIVE);                                                   <
 xs_principal.set_profile(                                                           <
     user => '"GRB_TEST_USER_01"',                                                   <
     profile => '"DEFAULT"');                                                        <
 xs_principal.set_verifier(                                                          <
     user => '"GRB_TEST_USER_01"',                                                   <
     verifier  => 'T:B1ED28E684D158779DD408B6AB210B0A264CE4F33448BB1450D01DD75FBF730 <
     type  => XS_PRINCIPAL.XS_SHA512);                                               <
END;                                                                                 <
/                                                                                    <
                                                                                     <
prompt GRB_TEST_USER_02.XS_USER                                                      <
--DBMS_METADATA:GRB_TEST_USER_02.XS_USER                                             <
                                                                                     <
                                                                                     <
BEGIN                                                                                <
 xs_principal.create_user(                                                           <
     name=>'"GRB_TEST_USER_02"',                                                     <
     schema=>'"ODBCAPTURE"',                                                         <
     status=>XS_PRINCIPAL.ACTIVE);                                                   <
 xs_principal.set_profile(                                                           <
     user => '"GRB_TEST_USER_02"',                                                   <
     profile => '"DEFAULT"');                                                        <
 xs_principal.set_verifier(                                                          <
     user => '"GRB_TEST_USER_02"',                                                   <
     verifier  => 'T:12723D051F39576E8847201016CAEC0F96624EACD997A5BF253A8B195D7F363 <
     type  => XS_PRINCIPAL.XS_SHA512);                                               <
END;                                                                                 <
/                                                                                    <
                                                                                     <
                                                                                     <
-- Database Role Grants to RAS Principals                                            <
-- DBMS_METADATA: "XS_ROLE_GRANT" doesn't do this                                    <
                                                                                     <
prompt grant "GRB_TEST_ROLE" to "GRB_TEST_ROLE_01";                                  <
grant "GRB_TEST_ROLE" to "GRB_TEST_ROLE_01";                                         <
                                                                                     <
                                                                                     <
-- RAS Role Grants to RAS Principals                                                 <
-- Note: DBMS_METADATA XS_ROLE_GRANT won't work with multiple users per role         <
                                                                                     <
prompt principal grant "GRB_TEST_ROLE_01" to "GRB_TEST_USER_01";                     <
BEGIN                                                                                <
  xs_principal.grant_roles(grantee => '"GRB_TEST_USER_01"',                          <
     role => '"GRB_TEST_ROLE_01"');                                                  <
END;                                                                                 <
/                                                                                    <
                                                                                     <
prompt principal grant "XSCONNECT" to "GRB_TEST_USER_01";                            <
BEGIN                                                                                <
  xs_principal.grant_roles(grantee => '"GRB_TEST_USER_01"',                          <
     role => '"XSCONNECT"');                                                         <
END;                                                                                 <
/                                                                                    <
                                                                                     <
prompt principal grant "XSPUBLIC" to "GRB_TEST_USER_01";                             <
BEGIN                                                                                <
  xs_principal.grant_roles(grantee => '"GRB_TEST_USER_01"',                          <
     role => '"XSPUBLIC"');                                                          <
END;                                                                                 <
/                                                                                    <
                                                                                     <
prompt principal grant "GRB_TEST_ROLE_01" to "GRB_TEST_USER_02";                     <
BEGIN                                                                                <
  xs_principal.grant_roles(grantee => '"GRB_TEST_USER_02"',                          <
     role => '"GRB_TEST_ROLE_01"');                                                  <
END;                                                                                 <
/                                                                                    <
                                                                                     <
prompt principal grant "XSCONNECT" to "GRB_TEST_USER_02";                            <
BEGIN                                                                                <
  xs_principal.grant_roles(grantee => '"GRB_TEST_USER_02"',                          <
     role => '"XSCONNECT"');                                                         <
END;                                                                                 <
/                                                                                    <
                                                                                     <
prompt principal grant "XSPUBLIC" to "GRB_TEST_USER_02";                             <
BEGIN                                                                                <
  xs_principal.grant_roles(grantee => '"GRB_TEST_USER_02"',                          <
     role => '"XSPUBLIC"');                                                          <
END;                                                                                 <
/                                                                                    <
                                                                                     <
                                                                                     <
--------------------------------------                                               <
-- RAS ACLs Owned by RAS Administrator                                               <
--------------------------------------                                               <
                                                                                     <
                                                                                     <
prompt GRB_TEST_ACL_01.XS_ACL                                                        <
--DBMS_METADATA:GRB_TEST_ACL_01.XS_ACL                                               <
                                                                                     <
                                                                                     <
DECLARE                                                                              <
 ace_list      XS$ACE_LIST;                                                          <
BEGIN                                                                                <
 ace_list := XS$ACE_LIST(                                                            <
   XS$ACE_TYPE(                                                                      <
     privilege_list => XS$NAME_LIST('"DELETE"', '"INSERT"', '"SELECT"', '"UPDATE"'), <
     principal_name=>'"GRB_TEST_USER_01"'));                                         <
                                                                                     <
 xs_acl.create_acl(                                                                  <
     name=>'"ODBCTEST"."GRB_TEST_ACL_01"',                                           <
     ace_list=>ace_list);                                                            <
END;                                                                                 <
/                                                                                    <
                                                                                     <
prompt GRB_TEST_ACL_02.XS_ACL                                                        <
--DBMS_METADATA:GRB_TEST_ACL_02.XS_ACL                                               <
                                                                                     <
                                                                                     <
DECLARE                                                                              <
 ace_list      XS$ACE_LIST;                                                          <
BEGIN                                                                                <
 ace_list := XS$ACE_LIST(                                                            <
   XS$ACE_TYPE(                                                                      <
     privilege_list => XS$NAME_LIST('"DELETE"', '"INSERT"', '"SELECT"', '"UPDATE"'), <
     principal_name=>'"GRB_TEST_USER_02"'));                                         <
                                                                                     <
 xs_acl.create_acl(                                                                  <
     name=>'"ODBCTEST"."GRB_TEST_ACL_02"',                                           <
     ace_list=>ace_list);                                                            <
END;                                                                                 <
/                                                                                    <
                                                                                     <
                                                                                     <
----------------------------------------------------                                 <
-- Policies for RAS Admininistrator (includes REALM)                                 <
----------------------------------------------------                                 <
                                                                                     <
                                                                                     <
prompt GRB_TEST_POLICY_01.XS_DATA_SECURITY                                           <
--DBMS_METADATA:GRB_TEST_POLICY_01.XS_DATA_SECURITY                                  <
--  For UNKNOWN reasons: Need to change from this:                                   <
--    dbms_xds.enable_xds(                                                           <
--       object_schema => 'ODBCAPTURE',                                              <
--       object_name => 'GRBTST_$NAME',                                              <
--       policy_name => '"ODBCTEST"."GRB_TEST_POLICY_01"');                          <
--  To this for use with Autonomous Database Service in Oracle Cloud:                <
--    xs_data_security.apply_object_policy(                                          <
--       schema => 'ODBCAPTURE',                                                     <
--       object => 'GRBTST_$NAME',                                                   <
--       policy => '"ODBCTEST"."GRB_TEST_POLICY_01"');                               <
                                                                                     <
                                                                                     <
BEGIN                                                                                <
  xs_data_security.create_policy(                                                    <
     name => '"ODBCTEST"."GRB_TEST_POLICY_01"',                                      <
     realm_constraint_list => NULL);                                                 <
                                                                                     <
  xs_data_security.apply_object_policy(                                              <
     schema => 'ODBCAPTURE',                                                         <
     object => 'GRBTST_$NAME',                                                       <
     policy => '"ODBCTEST"."GRB_TEST_POLICY_01"');                                   <
END;                                                                                 <
/                                                                                    <
DECLARE                                                                              <
    realmList   sys.xs$realm_constraint_list;                                        <
  BEGIN                                                                              <
  realmList := sys.xs$realm_constraint_list(                                         <
      sys.xs$realm_constraint_type(                                                  <
          realm => 'id < 10',                                                        <
          acl_list => XS$NAME_LIST('"ODBCTEST"."GRB_TEST_ACL_01"')),                 <
      sys.xs$realm_constraint_type(                                                  <
          realm => 'id >= 10',                                                       <
          acl_list => XS$NAME_LIST('"ODBCTEST"."GRB_TEST_ACL_02"')));                <
                                                                                     <
 xs_data_security.append_realm_constraints(policy => '"ODBCTEST"."GRB_TEST_POLICY_01 <
END;                                                                                 <
/                                                                                    <
                                                                                     <
                                                                                     <
set define on                                                                        <
diff -drywtNW 172 --suppress-common-lines ../../../grbtst/SYS/ODBCTEST.user grbtst/SYS/ODBCTEST.user
-- Real Application Security System Grants                                           <
                                                                                     <
                                                                                     <
prompt XS Admin Grant "ADMIN_ANY_SEC_POLICY" to "ODBCTEST"                           <
begin                                                                                <
   execute immediate 'begin' ||                                                      <
                     '  xs_admin_util.grant_system_privilege(''ADMIN_ANY_SEC_POLICY' <
                     'end;';                                                         <
exception when others then                                                           <
   if    SQLERRM not like '%PLS-00201: identifier ''XS_ADMIN_UTIL.GRANT_SYSTEM_PRIVI <
     AND SQLERRM not like '%ORA-01031: insufficient privileges%'                     <
   then                                                                              <
      raise;                                                                         <
   end if;                                                                           <
end;                                                                                 <
/                                                                                    <
                                                                                     <
prompt XS Admin Cloud Grant "ADMIN_ANY_SEC_POLICY" to "ODBCTEST"                     <
begin                                                                                <
   execute immediate 'begin' ||                                                      <
                     '  xs_admin_cloud_util.grant_system_privilege(''ADMIN_ANY_SEC_P <
                     'end;';                                                         <
exception when others then                                                           <
   if SQLERRM not like '%PLS-00201: identifier ''XS_ADMIN_CLOUD_UTIL.GRANT_SYSTEM_PR <
   then                                                                              <
      raise;                                                                         <
   end if;                                                                           <
end;                                                                                 <
/                                                                                    <
                                                                                     <
                                                                                     <
prompt XS Admin Grant "PROVISION" to "ODBCTEST"                                      <
begin                                                                                <
   execute immediate 'begin' ||                                                      <
                     '  xs_admin_util.grant_system_privilege(''PROVISION'', ''ODBCTE <
                     'end;';                                                         <
exception when others then                                                           <
   if    SQLERRM not like '%PLS-00201: identifier ''XS_ADMIN_UTIL.GRANT_SYSTEM_PRIVI <
     AND SQLERRM not like '%ORA-01031: insufficient privileges%'                     <
   then                                                                              <
      raise;                                                                         <
   end if;                                                                           <
end;                                                                                 <
/                                                                                    <
                                                                                     <
prompt XS Admin Cloud Grant "PROVISION" to "ODBCTEST"                                <
begin                                                                                <
   execute immediate 'begin' ||                                                      <
                     '  xs_admin_cloud_util.grant_system_privilege(''PROVISION'', '' <
                     'end;';                                                         <
exception when others then                                                           <
   if SQLERRM not like '%PLS-00201: identifier ''XS_ADMIN_CLOUD_UTIL.GRANT_SYSTEM_PR <
   then                                                                              <
      raise;                                                                         <
   end if;                                                                           <
end;                                                                                 <
/                                                                                    <
                                                                                     <
                                                                                     <
