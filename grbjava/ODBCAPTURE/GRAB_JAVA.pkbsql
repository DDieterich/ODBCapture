
--
--  Create ODBCAPTURE.GRAB_JAVA Package Body
--

set define off


--DBMS_METADATA:ODBCAPTURE.GRAB_JAVA

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "ODBCAPTURE"."GRAB_JAVA" 
as


------------------------------------------------------------
-- Create SYS Grants
procedure grb_sysgrnt
      (fh                 in out nocopy  fh2.sf_ptr_type
      ,in_grantee         in             varchar2
      ,in_file_name       in             varchar2
      ,in_elmnt           in             varchar2
      ,in_build_timing    in             varchar2)
is
   header_printed   boolean;
begin
   header_printed := FALSE;
   FOR jpol in
      (select seq
             ,java_class_owner
             ,java_class_grant
             ,java_class_name
             ,java_class_permission
             ,enabled
        from  priv_sysobj_java_fg_view
        where build_type     = grab_scripts.g_build_type
         and  grantee        = in_grantee
         and  build_timing   = in_build_timing
         and  kind           = 'GRANT'
        order by java_class_owner
             ,java_class_grant
             ,java_class_name
             ,java_class_permission)
   LOOP
      if NOT fh2.script_is_open(fh)
      then
         fh := fh2.script_open(in_filename     => in_file_name
                              ,in_elmnt        => in_elmnt
                              ,in_max_linesize => common_util.MAXIMUM_SQL_LENGTH);
         common_util.add_sysgrants_file_header(fh);
      end if;
      if NOT header_printed
      then
         header_printed := TRUE;
         --  Oracle Database 12c Release 1 (12.1)
         --  Database Java Developer''s Guide
         --  10 Security for Oracle Database Java Applications
         --  Setting Permissions
         --  http://docs.oracle.com/database/121/JJDEV/chten.htm#JJDEV13326
         fh2.script_put_line(fh, '');
         fh2.script_put_line(fh, '');
         fh2.script_put_line(fh, '--');
         fh2.script_put_line(fh, '--  "GRANTEE" (Delayed) Fine-Grained Java Permissions');
         fh2.script_put_line(fh, '--  Note: "JAVA_CLASS" Fine-Grained Java Permissions are given during object creation');
         fh2.script_put_line(fh, '--');
         fh2.script_put_line(fh, '--  "dbms_java.grant_permission" Parameter Descriptions:');
         fh2.script_put_line(fh, '--    grantee            is the name of a schema or role');
         fh2.script_put_line(fh, '--    permission_type    is the fully qualified name of a class that extends');
         fh2.script_put_line(fh, '--                       java.lang.security.Permission');
         fh2.script_put_line(fh, '--    permission_name    is the name of the Permission');
         fh2.script_put_line(fh, '--    permission_action  is the action of the Permission');
         fh2.script_put_line(fh, '--');
      end if;
      fh2.script_put_line(fh, 'BEGIN');
      fh2.script_put_line(fh, '  dbms_java.grant_permission');
      fh2.script_put_line(fh, '      (grantee           => ''' || in_grantee                 || ''''   );
      fh2.script_put_line(fh, '      ,permission_type   => ''' || jpol.java_class_owner      || ':'    ||
                                                                  jpol.java_class_grant      || ''''   );
      fh2.script_put_line(fh, '      ,permission_name   => ''' || jpol.java_class_name       || ''''   );
      fh2.script_put_line(fh, '      ,permission_action => ''' || jpol.java_class_permission || ''');' );
      fh2.script_put_line(fh, 'END;' );
      fh2.script_put_line(fh, '/' );
   END LOOP;
end grb_sysgrnt;


------------------------------------------------------------
-- Create FUTURE Grants
procedure grb_grnt
      (fh            in out nocopy  fh2.sf_ptr_type
      ,in_grantee    in             varchar2
      ,in_file_name  in             varchar2
      ,in_elmnt      in             varchar2)
is
   header_printed   boolean;
begin
   header_printed := FALSE;
   FOR jpol in
      (select seq
             ,grantee
             ,java_class_owner
             ,java_class_grant
             ,java_class_name
             ,java_class_permission
             ,enabled
        from  priv_obj_java_fg_view
        where build_type   = grab_scripts.g_build_type
         and  build_timing = 'FUTURE'     -- Grant delayed for this Grantee
         and  kind           = 'GRANT'
        order by grantee
             ,java_class_owner
             ,java_class_grant
             ,java_class_name
             ,java_class_permission)
   LOOP
      if NOT fh2.script_is_open(fh)
      then
         fh := fh2.script_open(in_filename     => in_file_name
                              ,in_elmnt        => in_elmnt
                              ,in_max_linesize => common_util.MAXIMUM_SQL_LENGTH);
         common_util.add_grants_file_header(fh         => fh
                                           ,in_grantee => in_grantee);
      end if;
      if NOT header_printed
      then
         header_printed := TRUE;
         fh2.script_put_line(fh, '');
         --  Oracle Database 12c Release 1 (12.1)
         --  Database Java Developer''s Guide
         --  10 Security for Oracle Database Java Applications
         --  Setting Permissions
         --  http://docs.oracle.com/database/121/JJDEV/chten.htm#JJDEV13326
         fh2.script_put_line(fh, '--');
         fh2.script_put_line(fh, '--  "GRANTEE" (Delayed) Fine-Grained Java Permissions');
         fh2.script_put_line(fh, '--  Note: "JAVA_CLASS" Fine-Grained Java Permissions are given during object creation');
         fh2.script_put_line(fh, '--');
         fh2.script_put_line(fh, '--  "dbms_java.grant_permission" Parameter Descriptions:');
         fh2.script_put_line(fh, '--    grantee            is the name of a schema or role');
         fh2.script_put_line(fh, '--    permission_type    is the fully qualified name of a class that extends');
         fh2.script_put_line(fh, '--                       java.lang.security.Permission');
         fh2.script_put_line(fh, '--    permission_name    is the name of the Permission');
         fh2.script_put_line(fh, '--    permission_action  is the action of the Permission');
         fh2.script_put_line(fh, '--');
      end if;
      fh2.script_put_line(fh, 'BEGIN');
      fh2.script_put_line(fh, '  dbms_java.grant_permission');
      fh2.script_put_line(fh, '      (grantee           => ''' || jpol.grantee               || ''''   );
      fh2.script_put_line(fh, '      ,permission_type   => ''' || jpol.java_class_owner      || ':'    ||
                                                                  jpol.java_class_grant      || ''''   );
      fh2.script_put_line(fh, '      ,permission_name   => ''' || jpol.java_class_name       || ''''   );
      fh2.script_put_line(fh, '      ,permission_action => ''' || jpol.java_class_permission || ''');' );
      fh2.script_put_line(fh, 'END;' );
      fh2.script_put_line(fh, '/' );
   END LOOP;
end grb_grnt;


------------------------------------------------------------
-- Create Java Source
procedure grb_pjava
is
   ELMNT   CONSTANT varchar2(100) := 'JAVA_SOURCE';
   fh      fh2.sf_ptr_type;  -- object script file handle
begin
   for buf1 in (select object_name                      SOURCE_NAME
                      ,object_name || '.' || file_ext1  FILE_NAME
                      ,build_timing
                 from  obj_install_object_tab  pjava
                 where build_type    = grab_scripts.g_build_type
                  and  object_owner  = grab_scripts.g_schema_name
                  and  object_type   = 'JAVA SOURCE'
                  and  element_name  = ELMNT
                 order by object_name
                      ,object_type)
   loop
      fh := fh2.script_open(in_filename     => buf1.file_name
                       ,in_elmnt        => ELMNT
                       ,in_max_linesize => common_util.MAXIMUM_SQL_LENGTH);
      fh2.script_put_line(fh, '');
      fh2.script_put_line(fh, '--');
      fh2.script_put_line(fh, '--  Create ' || grab_scripts.g_schema_name || '.' || buf1.source_name ||' Java');
      fh2.script_put_line(fh, '--');
      fh2.script_put_line(fh, '-- DBMS_METADATA does not include "create or replace"');
      if buf1.build_timing != 'CURRENT'
      then
         fh2.script_put_line(fh, '');
         fh2.script_put_line(fh, '-- NOTE: This is a " || buf1.build_timing || " Java Source');
      end if;
      fh2.script_put_line(fh, '');
      fh2.script_put_line(fh, 'set define off');
      fh2.script_put_line(fh, '');
      fh2.script_put_line(fh, '');
      --fh2.script_put_line(fh, '--DBMS_METADATA:' || grab_scripts.g_schema_name || '.' || buf1.source_name);
      -- DBMS_METADATA smashes the entire Java Source into 1 line.
      --fh2.put_big_line(fh, grab_scripts.g_schema_name || '.' || buf1.source_name || ' Java Source'
      --               ,COMMON_UTIL.escape_at_sign
      --                  (dbms_metadata.get_ddl
      --                     (object_type => 'JAVA_SOURCE'
      --                     ,name        => buf1.source_name
      --                     ,schema      => grab_scripts.g_schema_name) )
      --               ,common_util.MAXIMUM_SQL_LENGTH);
      fh2.script_put_line(fh, 'CREATE JAVA SOURCE NAMED "' || grab_scripts.g_schema_name ||
                                                     '"."' || buf1.source_name || '" AS');
      for buf2 in (select text
                    from  dba_source
                    where owner = grab_scripts.g_schema_name
                     and  name  = buf1.source_name
                     and  type  = 'JAVA SOURCE'
                    order by line)
      loop
         fh2.script_put_line(fh, COMMON_UTIL.escape_at_sign(buf2.text));
      end loop;
      fh2.script_put_line(fh, '/');
      fh2.script_put_line(fh, '');
      grab_scripts.grb_object_grants(fh, buf1.source_name, 'JAVA SOURCE');
      grab_scripts.grb_object_synonyms(fh, buf1.source_name, 'JAVA SOURCE', common_util.MAXIMUM_SQL_LENGTH);
      fh2.script_put_line(fh, '');
      for buf2 in (
         select name                    CLASS_NAME
          from  dba_java_classes
          where owner  = grab_scripts.g_schema_name
           and  source = buf1.source_name
          order by name)
      loop
         fh2.script_put_line(fh, '----------------------------------------');
         fh2.script_put_line(fh, '-- Class: ' || buf2.class_name);
         fh2.script_put_line(fh, '');
         --  Oracle Database 12c Release 1 (12.1)
         --  Database Java Developer''s Guide
         --  10 Security for Oracle Database Java Applications
         --  Setting Permissions
         --  http://docs.oracle.com/database/121/JJDEV/chten.htm#JJDEV13326
         fh2.script_put_line(fh, '--  "JAVA_CLASS" Fine-Grained Java Permissions');
         fh2.script_put_line(fh, '--  Note: "GRANTEE" Fine-Grained Java Permissions are given during User creation');
         fh2.script_put_line(fh, '--');
         fh2.script_put_line(fh, '--  "dbms_java.grant_permission" Parameter Descriptions:');
         fh2.script_put_line(fh, '--    grantee            is the name of a schema or role');
         fh2.script_put_line(fh, '--    permission_type    is the fully qualified name of a class that extends');
         fh2.script_put_line(fh, '--                       java.lang.security.Permission');
         fh2.script_put_line(fh, '--    permission_name    is the name of the Permission');
         fh2.script_put_line(fh, '--    permission_action  is the action of the Permission');
         fh2.script_put_line(fh, '--');
         FOR jpol in
            (select seq
                   ,grantee
                   ,java_class_owner
                   ,java_class_grant
                   ,java_class_name
                   ,java_class_permission
                   ,enabled
              from  priv_obj_java_fg_view
              where build_type   = grab_scripts.g_build_type
               and  build_timing = 'CURRENT'   -- Grantee has already been created
               and  kind           = 'GRANT'
               and  regexp_like(buf2.class_name, java_class_name)
              order by grantee
                   ,java_class_owner
                   ,java_class_grant
                   ,java_class_name
                   ,java_class_permission)
         LOOP
            fh2.script_put_line(fh, 'BEGIN');
            fh2.script_put_line(fh, '  dbms_java.grant_permission');
            fh2.script_put_line(fh, '      (grantee           => ''' || jpol.grantee               || ''''   );
            fh2.script_put_line(fh, '      ,permission_type   => ''' || jpol.java_class_owner      || ':'    ||
                                                                        jpol.java_class_grant      || ''''   );
            fh2.script_put_line(fh, '      ,permission_name   => ''' || jpol.java_class_name       || ''''   );
            fh2.script_put_line(fh, '      ,permission_action => ''' || jpol.java_class_permission || ''');' );
            fh2.script_put_line(fh, 'END;' );
            fh2.script_put_line(fh, '/' );
         END LOOP;
         grab_scripts.grb_object_grants(fh, buf2.class_name, 'JAVA CLASS');
         grab_scripts.grb_object_synonyms(fh, buf2.class_name, 'JAVA CLASS', common_util.MAXIMUM_SQL_LENGTH);
         fh2.script_put_line(fh, '');
      end loop;
      fh2.script_put_line(fh, 'set define on');
      fh2.script_close(fh);
   end loop;
end grb_pjava;


end grab_java;
/

set define on
